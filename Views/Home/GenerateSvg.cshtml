
@model SvgOutputSample.Models.SvgPreviewModel
@{
    Layout = "~/Views/Shared/_SvgPreviewLayout.cshtml";
}
@Html.Raw(Model.SvgContent)
@Html.HiddenFor(m => m.PageSize)
@Html.HiddenFor(m => m.Orientation)
@Html.HiddenFor(m => m.FileName)
<!-- PDFダウンロードボタン -->
<div class="text-center mt-4">
    <button id="downloadPdfBtn" class="btn btn-primary btn-lg">PDFをダウンロード</button>
</div>

<script>
    // 複数の処理をまとめて実行する
    window.onload = function () {
        adjustTextArea();
        updateTextPositions();
        resizeTextToFit();
        //ページサイズを更新
        var orientation = "@Model.Orientation";
        var pageSize = "@Model.PageSize";
        applyPageStyles(pageSize, orientation);
    };

    // PDFダウンロードボタンがクリックされたら
    document.getElementById("downloadPdfBtn").addEventListener("click", function () {
        window.print();
    });
    const pageDimensions = {
        "@(PDFサイズ.A4)": { width: '210mm', height: '297mm' },
    };
    function applyPageStyles(pageSize, orientation) {
        let pageWidth, pageHeight;
        const dimensions = pageDimensions[pageSize] || pageDimensions['A4']; // デフォルトはA4

        if (orientation === "@(PDF向き.横)") {
            pageWidth = dimensions.height; // 横向きは幅と高さを逆にする
            pageHeight = dimensions.width;
        } else {
            pageWidth = dimensions.width; // 縦向き
            pageHeight = dimensions.height;
        }
        // body と svg のスタイルを動的に設定

    }
</script>